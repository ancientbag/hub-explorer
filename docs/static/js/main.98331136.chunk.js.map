{"version":3,"sources":["components/item/item.js","main/App.js","serviceWorker.js","index.js"],"names":["Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","value","thousands","toString","parseInt","react_default","a","createElement","className","title","name","without","rel","href","owner","html_url","target","style","color","textDecoration","login","description","_round","stargazers_count","open_issues_count","forks_count","license","Component","App","state","q","items","sort","page","per_page","explore","more","_this2","url","concat","fetch","then","response","json","data","setState","method","_this3","trim","replace","_this4","id","type","onChange","e","onKeyDown","key","onSearch","onClick","setSort","checked","map","item","index","item_Item","assign","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8OAKqBA,2BAEnB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QACKJ,MAAQA,EAFGC,sEAKXO,GAEL,GAAGA,EAAQ,IAAK,CACd,IAAIC,EAAYD,EAAQ,IAExB,OADAA,EAAQA,EAAME,WACPC,SAASF,GAAa,IAG7B,OAAOD,mCAKT,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,MAAMC,MAAOZ,KAAKJ,MAAMiB,MAAOb,KAAKJ,MAAMiB,MACvDL,EAAAC,EAAAC,cAAA,KAAGI,QAAQ,OAAOC,IAAI,sBAAsBC,KAAMhB,KAAKJ,MAAMqB,MAAMC,SAAUC,OAAO,SAASC,MAAO,CAACC,MAAM,UAAUC,eAAe,SAAUtB,KAAKJ,MAAMqB,MAAMM,QAEjKf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBX,KAAKJ,MAAM4B,YAAcxB,KAAKJ,MAAM4B,YAAc,kBAEnFhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBS,MAAO,CAACC,MAAM,YAAYb,EAAAC,EAAAC,cAAA,KAAGE,MAAM,SAAT,WAC3DJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBX,KAAKyB,OAAOzB,KAAKJ,MAAM8B,oBAE3DlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBS,MAAO,CAACC,MAAM,YAAYb,EAAAC,EAAAC,cAAA,KAAGE,MAAM,eAAT,MAC3DJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBX,KAAKyB,OAAOzB,KAAKJ,MAAM+B,qBAE3DnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBS,MAAO,CAACC,MAAM,YAAYb,EAAAC,EAAAC,cAAA,KAAGE,MAAM,QAAQD,UAAU,sBACtFH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBX,KAAKyB,OAAOzB,KAAKJ,MAAMgC,eAE3DpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBX,KAAKJ,MAAMiC,QAAU7B,KAAKJ,MAAMiC,QAAQhB,KAAO,cAC5EL,EAAAC,EAAAC,cAAA,KAAGI,QAAQ,OAAOC,IAAI,sBAAsBI,OAAO,SAASH,KAAMhB,KAAKJ,MAAMsB,SAAUP,UAAU,aAAYH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAE9HH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBA5CamB,cCAbC,cAEnB,SAAAA,IAAa,IAAAlC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACXlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,QACKgC,MAAQ,CACXC,EAAE,GACFC,MAAM,GACNC,KAAK,UACLC,KAAK,EACLC,SAAS,IAPAxC,mFAaXG,KAAKsC,0CAGCC,GAAK,IAAAC,EAAAxC,KAEPyC,EAAM,8DAAAC,OAA8D1C,KAAKgC,MAAMI,KAAzE,cAAAM,OAA0F1C,KAAKgC,MAAMK,SAArG,kBAA+I,KAAjBrC,KAAKgC,MAAMC,EAAY,IAAIjC,KAAKgC,MAAMC,EAAI,IAC3J,YAApBjC,KAAKgC,MAAMG,OACZM,GAAO,SAASzC,KAAKgC,MAAMG,MAG7BQ,MAAMF,GACHG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIR,EAAOC,EAAKQ,SAAS,CAACd,MAAMM,EAAKR,MAAME,MAAMQ,OAAOK,EAAKb,SAAWM,EAAKQ,SAAS,CAACd,MAAMa,EAAKb,0CAGxGe,GAEHA,IAAWjD,KAAKgC,MAAMG,MACvBnC,KAAKgD,SAAS,CAACb,KAAKc,EAAOb,KAAK,GAAG,iDAK7B,IAAAc,EAAAlD,KAERA,KAAKgD,SAAS,CAACZ,KAAK,EAAEH,EAAEjC,KAAKgC,MAAMC,EAAEkB,OAAOC,QAAQ,OAAO,MAAM,WAC/DF,EAAKZ,6CAIA,IAAAe,EAAArD,KACP,OACEQ,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,aACN9C,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,QACN9C,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,aACN9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UADjB,iBAGAH,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,eACN9C,EAAAC,EAAAC,cAAA,SAAO4C,GAAG,eAAeC,KAAK,OAAOC,SAAW,SAACC,GAAKJ,EAAKL,SAAS,CAACf,EAAEwB,EAAEtC,OAAOf,SAAWsD,UAAY,SAACD,GAAkB,UAAVA,EAAEE,KAAiBN,EAAKO,cACxIpD,EAAAC,EAAAC,cAAA,UAAQmD,QAAU,WAAKR,EAAKO,YAAcN,GAAG,MAC3C9C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEfH,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,eACN9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,SAAO8C,SAAW,WAAKH,EAAKS,QAAQ,YAAcP,KAAK,QAAQ1C,KAAK,OAAOT,MAAM,QAAQ2D,QAA6B,YAApB/D,KAAKgC,MAAMG,OAA3I,YACA3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,SAAO8C,SAAW,WAAKH,EAAKS,QAAQ,UAAYP,KAAK,QAAQ1C,KAAK,OAAOT,MAAM,QAAQ2D,QAA6B,UAApB/D,KAAKgC,MAAMG,OAAzI,UACA3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,SAAO8C,SAAW,WAAKH,EAAKS,QAAQ,UAAYP,KAAK,QAAQ1C,KAAK,OAAOT,MAAM,QAAQ2D,QAA6B,UAApB/D,KAAKgC,MAAMG,OAAzI,aAIN3B,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,WACLtD,KAAKgC,MAAME,MAAM8B,IAAI,SAACC,EAAKC,GAAN,OACpB1D,EAAAC,EAAAC,cAACyD,EAADrE,OAAAsE,OAAA,GAAUH,EAAV,CAAgBN,IAAKO,OAEvB1D,EAAAC,EAAAC,cAAA,OAAK4C,GAAG,YAAYO,QAAU,WAAKR,EAAKL,SAAS,CAACZ,KAAKiB,EAAKrB,MAAMI,KAAK,GAAG,WAAKiB,EAAKf,SAAQ,OAA5F,sBApEuBR,aCObuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC","file":"static/js/main.98331136.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './item.css';\n\nimport PropTypes from 'prop-types';\n\nexport default class Item extends Component {\n\n  constructor(props){\n    super();\n    this.props = props;\n  }\n\n  _round(value){\n    // If value is more than 1000 then cut this to nK\n    if(value > 1000){\n      let thousands = value / 1000;\n      value = value.toString();\n      return parseInt(thousands) + 'K';\n    } else {\n    // If not then just return it\n      return value;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"item\">\n          <div className=\"item-owner\">\n            <p className=\"oft\" title={this.props.name}>{this.props.name}</p>\n            <a without=\"true\" rel=\"noopener noreferrer\" href={this.props.owner.html_url} target=\"_blank\" style={{color:'#949494',textDecoration:'none'}}>{this.props.owner.login}</a>\n          </div>\n          <p className=\"item-description\">{this.props.description ? this.props.description : 'No description'}</p>\n          { /* I would have compressed following replications into component, but it's not that much needed I guess */ }\n          <div className=\"item-short-info\">\n            <div className=\"item-short-icon\" style={{color:'#ffe25f'}}><p title=\"Stars\">â˜…</p></div>\n            <p className=\"item-short-amount\">{this._round(this.props.stargazers_count)}</p>\n          </div>\n          <div className=\"item-short-info\">\n            <div className=\"item-short-icon\" style={{color:'#f44336'}}><p title=\"Open issues\">!</p></div>\n            <p className=\"item-short-amount\">{this._round(this.props.open_issues_count)}</p>\n          </div>\n          <div className=\"item-short-info\">\n            <div className=\"item-short-icon\" style={{color:'#868686'}}><i title=\"Forks\" className=\"fas fa-share-alt\"></i></div>\n            <p className=\"item-short-amount\">{this._round(this.props.forks_count)}</p>\n          </div>\n          <p className=\"item-license\">{this.props.license ? this.props.license.name : 'No license'}</p>\n          <a without=\"true\" rel=\"noopener noreferrer\" target=\"_blank\" href={this.props.html_url} className=\"item-link\"><i className=\"fas fa-link\"></i></a>\n        </div>\n      <div className=\"item-hr\"/>\n      </div>\n    );\n  }\n}\n\nItem.propTypes ={\n  name: PropTypes.string,\n  owner: PropTypes.object,\n  description: PropTypes.string,\n  stargazers_count: PropTypes.number,\n  open_issues_count: PropTypes.number,\n  forks_count: PropTypes.number,\n  license: PropTypes.object\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Item from '../components/item/item';\n\nexport default class App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      q:'',\n      items:[],\n      sort:'popular',\n      page:0,\n      per_page:10\n    }\n  }\n\n  componentDidMount(){\n    // As mounted - explore most popular 'javascript' repos\n    this.explore();\n  }\n\n  explore(more){\n    // Build url\n    let url = `https://api.github.com/search/repositories?order=desc&page=${this.state.page}&per_page=${this.state.per_page}&q=javascript`+(this.state.q !== '' ?  '+'+this.state.q : '' );\n    if(this.state.sort !== 'popluar'){\n      url += '&sort='+this.state.sort;\n    }\n    // Then fetch\n    fetch(url)\n      .then(response => response.json())\n      .then(data => more ? this.setState({items:this.state.items.concat(data.items)}) : this.setState({items:data.items}))\n  }\n\n  setSort(method){\n    // Set sorting\n    if(method !== this.state.sort){\n      this.setState({sort:method,page:0},()=>{\n      });\n    }\n  }\n\n  onSearch(){\n    // Replace spaces to pluses\n    this.setState({page:0,q:this.state.q.trim().replace(/\\s+/g,'+')},()=>{\n      this.explore();\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"container\">\n        <div id=\"head\">\n          <div id=\"head-logo\">\n            <div className=\"point\"/> hub-explorer\n          </div>\n          <div id=\"head-search\">\n            <input id=\"search-input\" type=\"text\" onChange={((e)=>{this.setState({q:e.target.value})})} onKeyDown={((e)=>{if(e.key === 'Enter') this.onSearch()})} />\n            <button onClick={(()=>{this.onSearch()})} id=\"go\">\n              <i className=\"fas fa-search\" />\n            </button>\n            <div id=\"search-sort\">\n              <div className=\"search-radio\"><input onChange={(()=>{this.setSort('popular')})} type=\"radio\" name=\"sort\" value=\"stars\" checked={this.state.sort === 'popular'}/> popular</div>\n              <div className=\"search-radio\"><input onChange={(()=>{this.setSort('stars')})} type=\"radio\" name=\"sort\" value=\"stars\" checked={this.state.sort === 'stars'}/> stars</div>\n              <div className=\"search-radio\"><input onChange={(()=>{this.setSort('forks')})} type=\"radio\" name=\"sort\" value=\"forks\" checked={this.state.sort === 'forks'}/> forks</div>\n            </div>\n          </div>\n        </div>\n        <div id=\"content\">\n          {this.state.items.map((item,index)=>\n            <Item {...item} key={index} />\n          )}\n          <div id=\"load_more\" onClick={(()=>{this.setState({page:this.state.page+1},()=>{this.explore(true)})})}>load more</div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}